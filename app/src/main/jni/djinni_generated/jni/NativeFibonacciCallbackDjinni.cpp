// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from fibonacci.djinni

#include "NativeFibonacciCallbackDjinni.hpp"  // my header
#include "Marshal.hpp"

namespace Fibonacci {

NativeFibonacciCallbackDjinni::NativeFibonacciCallbackDjinni() : ::djinni::JniInterface<::Fibonacci::FibonacciCallbackDjinni, NativeFibonacciCallbackDjinni>() {}

NativeFibonacciCallbackDjinni::~NativeFibonacciCallbackDjinni() = default;

NativeFibonacciCallbackDjinni::JavaProxy::JavaProxy(JniType j) : JavaProxyCacheEntry(j) { }

NativeFibonacciCallbackDjinni::JavaProxy::~JavaProxy() = default;

void NativeFibonacciCallbackDjinni::JavaProxy::reportProgress(const std::string & c_progress) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::Fibonacci::NativeFibonacciCallbackDjinni>::get();
    jniEnv->CallVoidMethod(getGlobalRef(), data.method_reportProgress,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_progress)));
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace Fibonacci
